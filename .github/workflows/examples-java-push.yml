name: Build `examples/java` pushes

on:
  push:
    paths:
      - "examples/java/**"
      - ".github/workflows/examples-java-push.yml"
      - "schemas/**"

permissions:
  contents: read
jobs:
  test:
    defaults:
      run:
        working-directory: examples/java
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@a12a3943b4bdde767164f792f33f40b04645d846
        with:
          fetch-depth: 0
      - name: Set up JDK 17
        uses: actions/setup-java@f69f00b5e5324696b07f6b1c92f0470a6df00780
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Cache Gradle packages
        uses: actions/cache@937d24475381cd9c75ae6db12cb4e79714b926ed
        with:
          path: ~/.gradle
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Cache SonarCloud packages
        uses: actions/cache@937d24475381cd9c75ae6db12cb4e79714b926ed
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Build
        run: ./gradlew clean build
      - name: Perform Static Analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew sonarqube
      - name: Upload Artifacts
        uses: actions/upload-artifact@6673cd052c4cd6fcf4b4e6e60ea986c889389535
        with:
          name: examples-java-libs
          path: '**/build/libs/*'
          retention-days: 5
      - name: Upload Test reports
        uses: actions/upload-artifact@6673cd052c4cd6fcf4b4e6e60ea986c889389535
        with:
          name: examples-java-reports
          path: '**/build/reports/*'
          retention-days: 5
      - name: Upload spring-boot manifest
        uses: actions/upload-artifact@6673cd052c4cd6fcf4b4e6e60ea986c889389535
        with:
          name: spring-boot-manifest
          path: 'examples/java/spring-boot/manifest.yml'
          retention-days: 5
  deploy:
    environment: sandbox
    runs-on: ubuntu-18.04
    needs: test
    env:
      CF_API: "https://api.london.cloud.service.gov.uk"
      CF_ORG: "cabinet-office-cddo-dsa-apis"
      CF_SPACE: "sandbox"
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/download-artifact@fb598a63ae348fa914e94cd0ff38f362e927b741
        with:
          name: examples-java-libs
      - uses: actions/download-artifact@fb598a63ae348fa914e94cd0ff38f362e927b741
        with:
          name: spring-boot-manifest
      - name: Install the CF CLI
        run: |
          wget -q -O cf.tar.gz "https://packages.cloudfoundry.org/stable?release=linux64-binary&version=7.4.0&source=github-rel"
          sudo tar xzf cf.tar.gz --wildcards --directory /usr/local/bin/ "cf*"
      - name: Authenticate
        env:
          CF_USERNAME: ${{ secrets.CF_USER }}
          CF_PASSWORD: ${{ secrets.CF_PASSWORD }}
        run: |
          echo "Logging into $CF_ORG/$CF_SPACE..."
          cf api "${CF_API}"
          cf auth
          cf target -o "${CF_ORG}" -s "${CF_SPACE}"
      - name: Deploy to PaaS
        run: |
          cf push -f manifest.yml -p examples/java/spring-boot/build/libs/federated-api-model.jar --strategy rolling
          cf logout
